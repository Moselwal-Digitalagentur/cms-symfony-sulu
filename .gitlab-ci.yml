variables:
  CI_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG:$CI_PIPELINE_ID
  CI_DEV_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/dev/$CI_COMMIT_REF_SLUG:$CI_PIPELINE_ID
  BASE_URL: https://nevercodealone.projects.nevercodealone.de

stages:
  - build
  - deploy_stage
  - trigger_test
  - deploy_live
  - trigger_live_tests

# ... (other stages and jobs remain the same)

.deploy_live:
  stage: deploy_live
  tags:
    - docker2
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  image: docker:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker compose -f docker-compose.conversis.yml -p $SHORTCODE1 up -d --remove-orphans
    - docker exec $SHORTCODE1-web rm -rf /var/www/html/var/cache
    - docker exec $SHORTCODE1-web chown www-data:www-data -R /var/www/html/var/
    - docker exec $SHORTCODE1-web chown www-data:www-data -R /var/www/html/public/
  environment:
    name: live
    url: https://$URL
  variables:
    IMAGE: $CI_IMAGE
    SHORTCODE1: $SHORTCODE
    DATABASE_URL: mysql://$DB_USER:$DB_PWD@$DB_HOST:3306/$DB_NAME

deploy_live:
  extends: .deploy_live
  when: on_success
  needs:
    - cypress_full_test_preview_stage
    - cypress_custom_tests_preview_stage
    - playwright_screen_compare_live_against_preview

deploy_live_manual:
  extends: .deploy_live
  when: manual
  allow_failure: true

cypress_internal_links_test_live:
  stage: trigger_live_tests
  trigger:
    project: never-code-alone/never-code-alone-cypress-basis-tests
    branch: main
    strategy: depend
  variables:
    CYPRESS_BASE_URL: https://$URL
    CYPRESS_SPEC: "cypress/e2e/internal-links.cy.ts"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
      needs:
        - job: deploy_live
          optional: true
